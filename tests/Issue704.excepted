struct S
 {
   int x;
 };
 
 
 void foo()
 {
   S s = {1};
   S & __s7 = s;
   int & x = __s7.x;
     
   class __lambda_8_10
   {
     public: 
     inline /*constexpr */ void operator()() const
     {
     }
     
     private: 
     int x;
     
     public:
     __lambda_8_10(int & _x)
     : x{_x}
     {}
     
   };
   
   __lambda_8_10 g = __lambda_8_10{x};
 }
 
 void bar()
 {
   int arr[2] = {1, 2};
   int (&__arr14)[2] = arr;
   int & x = __arr14[0];
   int & _ = __arr14[1];
     
   class __lambda_15_12
   {
     public: 
     inline /*constexpr */ void operator()() const
     {
     }
     
     private: 
     int x;
     
     public:
     __lambda_15_12(int & _x)
     : x{_x}
     {}
     
   };
   
   __lambda_15_12 g = __lambda_15_12{x};
 }
 