/*************************************************************************************
 * NOTE: This an educational hand-rolled transformation. Things can be incorrect or  *
 * buggy.                                                                            *
 *************************************************************************************/
void __cxa_start(void);
void __cxa_atexit(void);
typedef int (*__vptp)();

struct __mptr
{
    short  d;
    short  i;
    __vptp f;
};

extern struct __mptr* __vtbl_array[];


#include <stdio.h>

typedef struct Fruit
{
  __mptr * __vptrFruit;
  double mWeight;
} Fruit;

inline void Destructor_Fruit(Fruit * __this)
{
  puts("~Fruit");
}

inline void PrintFruit(Fruit * __this)
{
  puts("Fruit's Print");
}

inline Fruit * Constructor_Fruit(Fruit * __this)
{
  __this->__vptrFruit = __vtbl_array[0];
  __this->mWeight = 0.0;
  return __this;
}


typedef struct Apple
{
  __mptr * __vptrFruit;
  double mWeight;
  int mRipeGrade;
} Apple;

inline void PrintApple(Apple * __this)
{
  printf("Apple's Print: %d\n", __this->mRipeGrade);
}

inline void Destructor_Apple(Apple * __this)
{
  Destructor_Fruit((Fruit *)__this);
}

inline Apple * Constructor_Apple(Apple * __this)
{
  Constructor_Fruit((Fruit *)__this);
  __this->__vptrFruit = __vtbl_array[1];
  __this->mRipeGrade = 5;
  return __this;
}


typedef struct PinkLady
{
  __mptr * __vptrFruit;
  double mWeight;
  int mRipeGrade;
  int mColorGrade;
} PinkLady;

inline void PrintPinkLady(PinkLady * __this)
{
  printf("Pink Ladies Print: %d\n", __this->mColorGrade);
}

inline void Destructor_PinkLady(PinkLady * __this)
{
  Destructor_Apple((Apple *)__this);
}

inline PinkLady * Constructor_PinkLady(PinkLady * __this)
{
  Constructor_Apple((Apple *)__this);
  __this->__vptrFruit = __vtbl_array[2];
  __this->mColorGrade = 8;
  return __this;
}


int __main(void)
{
  PinkLady delicious;
  Constructor_PinkLady((PinkLady *)&delicious);
  (*((void (*)(PinkLady *))((&delicious)->__vptrFruit[1]).f))((((PinkLady *)(char *)(&delicious)) + ((&delicious)->__vptrFruit[1]).d));
  Fruit * f = (Fruit *)&delicious;
  (*((void (*)(Fruit *))((f)->__vptrFruit[1]).f))((((Fruit *)(char *)(f)) + ((f)->__vptrFruit[1]).d));
  return 0;
  (*((void (*)(PinkLady *))((&delicious)->__vptrFruit[0]).f))((((PinkLady *)(char *)(&delicious)) + ((&delicious)->__vptrFruit[0]).d));
}

int main(void)
{
  __cxa_start();
  int ret = __main();
  __cxa_atexit();
  return ret;
  /* ret // lifetime ends here */
}

__mptr __vtbl_Fruit[2] = {{0, 0, (__vptp)Destructor_Fruit}, {0, 0, (__vptp)PrintFruit}};
__mptr __vtbl_Apple[2] = {{0, 0, (__vptp)Destructor_Apple}, {0, 0, (__vptp)PrintApple}};
__mptr __vtbl_PinkLady[2] = {{0, 0, (__vptp)Destructor_PinkLady}, {0, 0, (__vptp)PrintPinkLady}};

__mptr * __vtbl_array[3] = {__vtbl_Fruit, __vtbl_Apple, __vtbl_PinkLady};

void __cxa_start(void)
{
}

void __cxa_atexit(void)
{
}

